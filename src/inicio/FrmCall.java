/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inicio;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class FrmCall extends javax.swing.JFrame {

    /**
     * Creates new form tarea1
     */
    
    DefaultListModel modelo = new DefaultListModel();
    DefaultTableModel modelo2 = new DefaultTableModel();
    String info[][];

    public FrmCall() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        lista.setModel(modelo);
        String titulo[]={"Ticket","Fecha y Hora de Atención"};
        modelo2.setColumnIdentifiers(titulo);
        lista2.setModel(modelo2);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList<>();
        Nombres = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        lista2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lblTicketsAtendidos = new javax.swing.JLabel();
        agregar = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        atender = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        ticket = new javax.swing.JTextField();
        pendiente = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(179, 179, 179));

        lista.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jScrollPane3.setViewportView(lista);

        Nombres.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        Nombres.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Seleccione-", "Maria Alejandra", "Jose Carlos", "Julio Cesar" }));
        Nombres.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 0)));
        Nombres.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Nombres.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                NombresItemStateChanged(evt);
            }
        });
        Nombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombresActionPerformed(evt);
            }
        });

        lista2.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        lista2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ticket", "Fecha y Hora de Atención"
            }
        ));
        jScrollPane2.setViewportView(lista2);

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semilight", 3, 18)); // NOI18N
        jLabel1.setText("¿Cual es tu nombre?");

        lblTicketsAtendidos.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        lblTicketsAtendidos.setText("Ticket Atendidos");

        agregar.setBackground(new java.awt.Color(93, 232, 232));
        agregar.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        agregar.setText("+");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        jTable2.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ticket", "Fecha Atención"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2jTable1MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable2);

        atender.setBackground(new java.awt.Color(81, 247, 247));
        atender.setFont(new java.awt.Font("Yu Gothic UI Semilight", 3, 18)); // NOI18N
        atender.setText("ATENDER");
        atender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atenderActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semilight", 3, 18)); // NOI18N
        jLabel2.setText("Ingrese el código del ticket de consulta");

        jList2.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jScrollPane5.setViewportView(jList2);

        ticket.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        ticket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ticketActionPerformed(evt);
            }
        });

        pendiente.setFont(new java.awt.Font("Yu Gothic UI Semilight", 3, 18)); // NOI18N
        pendiente.setText("Tickets Pendientes:");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setPreferredSize(new java.awt.Dimension(626, 206));

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Semilight", 3, 18)); // NOI18N
        jLabel3.setText("Bienvenido, Operador de Soporte en Línea");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(ticket)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Nombres, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(jLabel1))
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(pendiente, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                                .addComponent(atender))))
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblTicketsAtendidos)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Nombres, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ticket, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(atender)
                            .addComponent(pendiente, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblTicketsAtendidos)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NombresItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_NombresItemStateChanged
        // TODO add your handling code here:
        modelo.removeAllElements();
        for (int i = modelo2.getRowCount()-1; i >-1 ; i--) {
            modelo2.removeRow(i);
        }
        if(String.valueOf(Nombres.getSelectedItem()).equals("-Seleccione-")){
            pendiente.setText(String.valueOf("Ticket Pendientes:"));
        }
        if (String.valueOf(Nombres.getSelectedItem()).equals("Maria Alejandra")) {
            leer("D:/CallApp-Basico/info-JaramilloMendezMariaAlejandra.txt");
        }
        if (String.valueOf(Nombres.getSelectedItem()).equals("Jose Carlos")) {
            leer("D:/CallApp-Basico/info-PeraltaTiconaJoseCarlos.txt");
        }
        if (String.valueOf(Nombres.getSelectedItem()).equals("Julio Cesar")) {
            leer("D:/CallApp-Basico/info-ZambranoEsquivezJulioCesar.txt");
        }
    }//GEN-LAST:event_NombresItemStateChanged

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        // TODO add your handling code here:
        if (String.valueOf(Nombres.getSelectedItem()).equals("-Seleccione-")) {
            JOptionPane.showMessageDialog(this, "Ingrese Operador");
        }else{
            if (ticket.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Ingrese ticket");
            }else{
                if(String.valueOf(Nombres.getSelectedItem()).equals("Maria Alejandra")){
                    agregar(ticket.getText()+";-P|;"+getFechaActual()+" "+getHoraActual(),"D:/CallApp-Basico/info-JaramilloMendezMariaAlejandra.txt");
                }
                if(String.valueOf(Nombres.getSelectedItem()).equals("Jose Carlos")){
                    agregar(ticket.getText()+";-P|;"+getFechaActual()+" "+getHoraActual(),"D:/CallApp-Basico/info-PeraltaTiconaJoseCarlos.txt");
                }
                if(String.valueOf(Nombres.getSelectedItem()).equals("Julio Cesar")){
                    agregar(ticket.getText()+";-P|;"+getFechaActual()+" "+getHoraActual(),"D:/CallApp-Basico/info-ZambranoEsquivezJulioCesar.txt");
                }
              
            }
        }
    }//GEN-LAST:event_agregarActionPerformed

    private void jTable2jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2jTable1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2jTable1MouseClicked

    private void atenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atenderActionPerformed
         // TODO add your handling code here:
        String valor = String.valueOf(Nombres.getModel().getSelectedItem());
        String tickets = lista.getSelectedValue();
        if (tickets == null) {
            JOptionPane.showMessageDialog(this, "Selecciona un ticket.");
            return;
        }

        if(String.valueOf(Nombres.getSelectedItem()).equals("Maria Alejandra")){
            atender(tickets,"D:/CallApp-Basico/info-JaramilloMendezMariaAlejandra.txt",valor);
        }
        if(String.valueOf(Nombres.getSelectedItem()).equals("Jose Carlos")){
            atender(tickets,"D:/CallApp-Basico/info-PeraltaTiconaJoseCarlos.txt",valor);
        }
        if(String.valueOf(Nombres.getSelectedItem()).equals("Julio Cesar")){
            atender(tickets,"D:/CallApp-Basico/info-ZambranoEsquivezJulioCesar.txt",valor);
        }
        if (lista.getModel().getSize() == 0) {
            JOptionPane.showMessageDialog(this, "¡Muchas gracias, atendimos todos los tickets!", valor, JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_atenderActionPerformed

    private void NombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NombresActionPerformed

    private void ticketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ticketActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ticketActionPerformed
    
    
     void leer(String ruta){
        String linea = null;String aux[];String[] contenido; 
        File archivo = new File(ruta);
        FileReader fr = null;
        try {
            fr = new FileReader(archivo);
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
        BufferedReader br = new BufferedReader(fr);
        try {
            while ((linea = br.readLine()) != null) {
                aux = linea.split(";");
                if(aux[1].equals("-P|")){
                    modelo.addElement(aux[0]+aux[1]+aux[2]);
                }else{
                    contenido = new String[2]; 
                    contenido[0] = aux[0]+aux[1];
                    contenido[1] = aux[2];
                    modelo2.addRow(contenido);
                }
            }
            pendiente.setText(String.valueOf("Tickets Pendientes:"+modelo.size()));
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }

    }  
        
    void agregar(String dato, String ruta){
        String contenido="";String aux[];
        String linea = null;
        File archivo = new File(ruta);
        FileReader fr = null;
        try {
            fr = new FileReader(archivo);
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
        BufferedReader br = new BufferedReader(fr);
        try {
            while ((linea = br.readLine()) != null) {
                contenido+=linea+"\n";
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }

        try (FileWriter writer = new FileWriter(ruta);
            BufferedWriter bw = new BufferedWriter(writer)) {
            contenido+=dato;
            bw.write(contenido);
            aux = dato.split(";");
            modelo.addElement(aux[0]+aux[1]+aux[2]);
            pendiente.setText(String.valueOf("Ticket Pendientes:"+modelo.size()));
            ticket.setText("");
        }catch (IOException e){
            JOptionPane.showMessageDialog(this, e);
        }
    }
    
    void atender(String dato, String ruta,String valor){
        String contenido="";String aux[];String dat[] = new String[2];
        String linea = null;
        File archivo = new File(ruta);
        FileReader fr = null;
        try {
            fr = new FileReader(archivo);
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
        BufferedReader br = new BufferedReader(fr);
        try {
            while ((linea = br.readLine()) != null) {
                aux=linea.split(";");
                if(!(aux[0]+aux[1]+aux[2]).equals(dato)){
                    contenido+=linea+"\n";
                }
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }

        try (FileWriter writer = new FileWriter(ruta);
            BufferedWriter bw = new BufferedWriter(writer)) {
            aux=dato.split("\\|");
            dat[0]=aux[0].replace("-P", "-A");dat[1]=aux[1];
            modelo2.addRow(dat);
            aux=dato.split("\\|");         
            dat[0]=aux[0].replace("-P", ";-A;");dat[1]=aux[1];
            contenido+=dat[0]+dat[1];
            bw.write(contenido);
            modelo.remove(lista.getSelectedIndex());
            pendiente.setText(String.valueOf("Ticket Pendientes:"+modelo.size()));
        }catch (IOException e){
            JOptionPane.showMessageDialog(this, "¡Muchas gracias, atendimos todos los tickets!", valor, JOptionPane.INFORMATION_MESSAGE);
        }
    } 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCall.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmCall().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Nombres;
    private javax.swing.JButton agregar;
    private javax.swing.JButton atender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList<String> jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblTicketsAtendidos;
    private javax.swing.JList<String> lista;
    private javax.swing.JTable lista2;
    private javax.swing.JLabel pendiente;
    private javax.swing.JTextField ticket;
    // End of variables declaration//GEN-END:variables
        
    public static String getFechaActual() {
        Date ahora = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        return formato.format(ahora);
    }
    public static String getHoraActual() {
        Date ahora = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("hh:mm:ss");
        return formato.format(ahora);
    }
    
}